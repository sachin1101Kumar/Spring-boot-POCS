Random r = new SecureRandom();
byte[] salt = new byte[20];
r.nextBytes(salt);


public static byte[] encrypt(byte[] data, char[] password,
    byte[] salt, int noIterations) {
  try {
    String method = "PBEWithMD5AndTripleDES";
    SecretKeyFactory kf = SecretKeyFactory.getInstance(method);
    PBEKeySpec keySpec = new PBEKeySpec(password);
    SecretKey key = kf.generateSecret(keySpec);
    Cipher ciph = Cipher.getInstance(method);
    PBEParameterSpec params = new PBEParameterSpec(salt, noIterations);
    return ciph.doFinal(data);
  } catch (Exception e) {
    throw new RuntimeException("Spurious encryption error");
  }
}


--------------------------------------------------------
SecureRandom random = new SecureRandom();
byte[] salt = new byte[16];
random.nextBytes(salt);

KeySpec spec = new PBEKeySpec(password.toCharArray(), salt, 65536, 128);
SecretKeyFactory factory = SecretKeyFactory.getInstance("PBKDF2WithHmacSHA1");

byte[] hash = factory.generateSecret(spec).getEncoded();